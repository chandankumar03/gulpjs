$(document).ready(function()
{
    /** on page load checks whether user is visiting same page within 15 mins or not
     * IF Yes then shows captcha otherwise not
     * **/
    $.ajax
    ({
        url: root_url+'/site_page/show_hide_captch',
        data:{"from_page":"mangiamo"},
        type: "POST",
        success: function(data)
        {
            if(data!="" && data==1)
            {
                $("#recaptcha_container").css("display","block");
                $("#captcha_status").val(1);
            }
            else
            {
                $("#recaptcha_container").css("display","none");
                $("#captcha_status").val(0);
            }
        } 
    });
   
    $("#byfdcFormSubmitBut").on("click", function()
    {
        $("#tokenErrorKitchen").hide();
        $("#fnameError").css("display","none");
        $("#lnameError").css("display","none");
        $("#email_idError").css("display","none");
        $("#mobileError").css("display","none");
        $("#cityError").css("display","none");
        
        var fname=$("#fname").val().trim();
        var lname=$("#lname").val().trim();
        var email_id=$("#email_id").val().trim();
        var mobile=$("#mobile").val().trim();
        var city=$("#city").val().trim();
        
        var alphaExp = /^[a-zA-Z ]+$/;
        var numExp = /^[0-9]+$/;
        var emailExp = /^[\w\-\.\+]+\@[a-zA-Z0-9\.\-]+\.[a-zA-z0-9]{2,4}$/;
       
        var show_captcha=  $("#recaptcha_container").css("display");
       
        var error=0;
       
        if(fname=="" || !fname.match(alphaExp))
        {
            $("#fnameError").html("Invalid first name.");
            $("#fnameError").css("display","block");
            
            error=1;
        }
        else if(lname=="" || !lname.match(alphaExp))
        {
            $("#lnameError").html("Invalid last name.");
            $("#lnameError").css("display","block");
            
            error=1;
        }
        else if(email_id=="" || !email_id.match(emailExp))
        {
            $("#email_idError").html("Invalid email id.");
            $("#email_idError").css("display","block");
            
           error=1;
        }
        else if(mobile.length!=10 || isNaN(mobile) || mobile.charAt(0) == 0)
        {
            $("#mobileError").html("Invalid mobile number");
            $("#mobileError").css("display","block");
            
            error=1;
        }
        else if(city!="Delhi NCR" && city!="Mumbai" && city!="Bangalore" && city!="Pune" && city!="Chennai" && city!="Hyderabad")
        {
            $("#cityError").html("Please select valid city name");
            $("#cityError").css("display","block");
            
            error=1;
        }
        if(show_captcha=="block")
        {
            var v = grecaptcha.getResponse(widgetId_mangiamo);
            if(v=="")
            {
                if($("#captcha_error").length>0)
                {
                    $("#captcha_error").html("Please re-enter your reCAPTCHA.").addClass("error-text");
                }
                else
                {
                    $("#recaptcha_container").after("<span id='captcha_error' class='error-text'>Please re-enter your reCAPTCHA.</span>");
                }
                error=1;
            }
        }
       
        if (error == 0)
        {
            var formData = $("#mangiamo_form").serialize();
            var path = root_url + "/look/getBespokeFormData";
            $.ajax
            ({
                url: path,
                type: "POST",
                processData: false,
                cache: false,
                data: formData,
                success: function (data)
                {
                    if (data == "success")
                    {
                        $(".byfdcForm-container").hide();
            $(".byfdcForm-thnk-msg").show();
                    }
                    else if(data=="captcha_error")
                    {
                        if($("#captcha_error").length>0)
                        {
                            $("#captcha_error").html("Please re-enter your reCAPTCHA.");
                        }
                        else
                        {
                            $("#recaptcha_container").after("<span id='captcha_error'>Please re-enter your reCAPTCHA.</span>");
                        }
                    }
                    else if(data=="Something went wrong!!")
                    {
                        $("#tokenErrorKitchen").html("An error has occurred. Please refresh the page and try again.");
                        $("#tokenErrorKitchen").show();
                    }
                },
                complete:function(data)
                {
                    grecaptcha.reset(widgetId_mangiamo);
                }
            });           
        }else{
            grecaptcha.reset(widgetId_mangiamo);
            return false;
        }
    });
   
});

/*Used to refresh captcha code */
function refreshCaptcha(form_id)
{
    var num = Math.floor((Math.random()*100)+1);
    $("#"+ form_id +" #captchaimg").attr('src','/site_page/captcha?q='+num);
}
/*
 * CSS3 Animate it
 * Copyright (c) 2014 Jack McCourt
 * https://github.com/kriegar/css3-animate-it
 * Version: 0.1.0
 * 
 * I utilise the jQuery.appear plugin within this javascript file so here is a link to that too
 * https://github.com/morr/jquery.appear
 *
 * I also utilise the jQuery.doTimeout plugin for the data-sequence functionality so here is a link back to them.
 * http://benalman.com/projects/jquery-dotimeout-plugin/
 */
(function($) {
  var selectors = [];

  var check_binded = false;
  var check_lock = false;
  var defaults = {
    interval: 250,
    force_process: false
  }
  var $window = $(window);

  var $prior_appeared;

  function process() {
    check_lock = false;
    for (var index = 0; index < selectors.length; index++) {
      var $appeared = $(selectors[index]).filter(function() {
        return $(this).is(':appeared');
      });

      $appeared.trigger('appear', [$appeared]);

      if ($prior_appeared) {
        
        var $disappeared = $prior_appeared.not($appeared);
        $disappeared.trigger('disappear', [$disappeared]);
      }
      $prior_appeared = $appeared;
    }
  }

  // "appeared" custom filter
  $.expr[':']['appeared'] = function(element) {
    var $element = $(element);
    if (!$element.is(':visible')) {
      return false;
    }

    var window_left = $window.scrollLeft();
    var window_top = $window.scrollTop();
    var offset = $element.offset();
    var left = offset.left;
    var top = offset.top;

    if (top + $element.height() >= window_top &&
        top - ($element.data('appear-top-offset') || 0) <= window_top + $window.height() &&
        left + $element.width() >= window_left &&
        left - ($element.data('appear-left-offset') || 0) <= window_left + $window.width()) {
      return true;
    } else {
      return false;
    }
  }

  $.fn.extend({
    // watching for element's appearance in browser viewport
    appear: function(options) {
      var opts = $.extend({}, defaults, options || {});
      var selector = this.selector || this;
      if (!check_binded) {
        var on_check = function() {
          if (check_lock) {
            return;
          }
          check_lock = true;

          setTimeout(process, opts.interval);
        };

        $(window).scroll(on_check).resize(on_check);
        check_binded = true;
      }

      if (opts.force_process) {
        setTimeout(process, opts.interval);
      }
      selectors.push(selector);
      return $(selector);
    }
  });

  $.extend({
    // force elements's appearance check
    force_appear: function() {
      if (check_binded) {
        process();
        return true;
      };
      return false;
    }
  });
})(jQuery);



/*!
 * jQuery doTimeout: Like setTimeout, but better! - v1.0 - 3/3/2010
 * http://benalman.com/projects/jquery-dotimeout-plugin/
 * 
 * Copyright (c) 2010 "Cowboy" Ben Alman
 * Dual licensed under the MIT and GPL licenses.
 * http://benalman.com/about/license/
 */

// Script: jQuery doTimeout: Like setTimeout, but better!
//
// *Version: 1.0, Last updated: 3/3/2010*
// 
// Project Home - http://benalman.com/projects/jquery-dotimeout-plugin/
// GitHub       - http://github.com/cowboy/jquery-dotimeout/
// Source       - http://github.com/cowboy/jquery-dotimeout/raw/master/jquery.ba-dotimeout.js
// (Minified)   - http://github.com/cowboy/jquery-dotimeout/raw/master/jquery.ba-dotimeout.min.js (1.0kb)
// 
// About: License
// 
// Copyright (c) 2010 "Cowboy" Ben Alman,
// Dual licensed under the MIT and GPL licenses.
// http://benalman.com/about/license/
// 
// About: Examples
// 
// These working examples, complete with fully commented code, illustrate a few
// ways in which this plugin can be used.
// 
// Debouncing      - http://benalman.com/code/projects/jquery-dotimeout/examples/debouncing/
// Delays, Polling - http://benalman.com/code/projects/jquery-dotimeout/examples/delay-poll/
// Hover Intent    - http://benalman.com/code/projects/jquery-dotimeout/examples/hoverintent/
// 
// About: Support and Testing
// 
// Information about what version or versions of jQuery this plugin has been
// tested with, what browsers it has been tested in, and where the unit tests
// reside (so you can test it yourself).
// 
// jQuery Versions - 1.3.2, 1.4.2
// Browsers Tested - Internet Explorer 6-8, Firefox 2-3.6, Safari 3-4, Chrome 4-5, Opera 9.6-10.1.
// Unit Tests      - http://benalman.com/code/projects/jquery-dotimeout/unit/
// 
// About: Release History
// 
// 1.0 - (3/3/2010) Callback can now be a string, in which case it will call
//       the appropriate $.method or $.fn.method, depending on where .doTimeout
//       was called. Callback must now return `true` (not just a truthy value)
//       to poll.
// 0.4 - (7/15/2009) Made the "id" argument optional, some other minor tweaks
// 0.3 - (6/25/2009) Initial release

(function($){
  '$:nomunge'; // Used by YUI compressor.
  
  var cache = {},
    
    // Reused internal string.
    doTimeout = 'doTimeout',
    
    // A convenient shortcut.
    aps = Array.prototype.slice;
  
  // Method: jQuery.doTimeout
  // 
  // Initialize, cancel, or force execution of a callback after a delay.
  // 
  // If delay and callback are specified, a doTimeout is initialized. The
  // callback will execute, asynchronously, after the delay. If an id is
  // specified, this doTimeout will override and cancel any existing doTimeout
  // with the same id. Any additional arguments will be passed into callback
  // when it is executed.
  // 
  // If the callback returns true, the doTimeout loop will execute again, after
  // the delay, creating a polling loop until the callback returns a non-true
  // value.
  // 
  // Note that if an id is not passed as the first argument, this doTimeout will
  // NOT be able to be manually canceled or forced. (for debouncing, be sure to
  // specify an id).
  // 
  // If id is specified, but delay and callback are not, the doTimeout will be
  // canceled without executing the callback. If force_mode is specified, the
  // callback will be executed, synchronously, but will only be allowed to
  // continue a polling loop if force_mode is true (provided the callback
  // returns true, of course). If force_mode is false, no polling loop will
  // continue, even if the callback returns true.
  // 
  // Usage:
  // 
  // > jQuery.doTimeout( [ id, ] delay, callback [, arg ... ] );
  // > jQuery.doTimeout( id [, force_mode ] );
  // 
  // Arguments:
  // 
  //  id - (String) An optional unique identifier for this doTimeout. If id is
  //    not specified, the doTimeout will NOT be able to be manually canceled or
  //    forced.
  //  delay - (Number) A zero-or-greater delay in milliseconds after which
  //    callback will be executed. 
  //  callback - (Function) A function to be executed after delay milliseconds.
  //  callback - (String) A jQuery method to be executed after delay
  //    milliseconds. This method will only poll if it explicitly returns
  //    true.
  //  force_mode - (Boolean) If true, execute that id's doTimeout callback
  //    immediately and synchronously, continuing any callback return-true
  //    polling loop. If false, execute the callback immediately and
  //    synchronously but do NOT continue a callback return-true polling loop.
  //    If omitted, cancel that id's doTimeout.
  // 
  // Returns:
  // 
  //  If force_mode is true, false or undefined and there is a
  //  yet-to-be-executed callback to cancel, true is returned, but if no
  //  callback remains to be executed, undefined is returned.
  
  $[doTimeout] = function() {
    return p_doTimeout.apply( window, [ 0 ].concat( aps.call( arguments ) ) );
  };
  
  // Method: jQuery.fn.doTimeout
  // 
  // Initialize, cancel, or force execution of a callback after a delay.
  // Operates like <jQuery.doTimeout>, but the passed callback executes in the
  // context of the jQuery collection of elements, and the id is stored as data
  // on the first element in that collection.
  // 
  // If delay and callback are specified, a doTimeout is initialized. The
  // callback will execute, asynchronously, after the delay. If an id is
  // specified, this doTimeout will override and cancel any existing doTimeout
  // with the same id. Any additional arguments will be passed into callback
  // when it is executed.
  // 
  // If the callback returns true, the doTimeout loop will execute again, after
  // the delay, creating a polling loop until the callback returns a non-true
  // value.
  // 
  // Note that if an id is not passed as the first argument, this doTimeout will
  // NOT be able to be manually canceled or forced (for debouncing, be sure to
  // specify an id).
  // 
  // If id is specified, but delay and callback are not, the doTimeout will be
  // canceled without executing the callback. If force_mode is specified, the
  // callback will be executed, synchronously, but will only be allowed to
  // continue a polling loop if force_mode is true (provided the callback
  // returns true, of course). If force_mode is false, no polling loop will
  // continue, even if the callback returns true.
  // 
  // Usage:
  // 
  // > jQuery('selector').doTimeout( [ id, ] delay, callback [, arg ... ] );
  // > jQuery('selector').doTimeout( id [, force_mode ] );
  // 
  // Arguments:
  // 
  //  id - (String) An optional unique identifier for this doTimeout, stored as
  //    jQuery data on the element. If id is not specified, the doTimeout will
  //    NOT be able to be manually canceled or forced.
  //  delay - (Number) A zero-or-greater delay in milliseconds after which
  //    callback will be executed. 
  //  callback - (Function) A function to be executed after delay milliseconds.
  //  callback - (String) A jQuery.fn method to be executed after delay
  //    milliseconds. This method will only poll if it explicitly returns
  //    true (most jQuery.fn methods return a jQuery object, and not `true`,
  //    which allows them to be chained and prevents polling).
  //  force_mode - (Boolean) If true, execute that id's doTimeout callback
  //    immediately and synchronously, continuing any callback return-true
  //    polling loop. If false, execute the callback immediately and
  //    synchronously but do NOT continue a callback return-true polling loop.
  //    If omitted, cancel that id's doTimeout.
  // 
  // Returns:
  // 
  //  When creating a <jQuery.fn.doTimeout>, the initial jQuery collection of
  //  elements is returned. Otherwise, if force_mode is true, false or undefined
  //  and there is a yet-to-be-executed callback to cancel, true is returned,
  //  but if no callback remains to be executed, undefined is returned.
  
  $.fn[doTimeout] = function() {
    var args = aps.call( arguments ),
      result = p_doTimeout.apply( this, [ doTimeout + args[0] ].concat( args ) );
    
    return typeof args[0] === 'number' || typeof args[1] === 'number'
      ? this
      : result;
  };
  
  function p_doTimeout( jquery_data_key ) {
    var that = this,
      elem,
      data = {},
      
      // Allows the plugin to call a string callback method.
      method_base = jquery_data_key ? $.fn : $,
      
      // Any additional arguments will be passed to the callback.
      args = arguments,
      slice_args = 4,
      
      id        = args[1],
      delay     = args[2],
      callback  = args[3];
    
    if ( typeof id !== 'string' ) {
      slice_args--;
      
      id        = jquery_data_key = 0;
      delay     = args[1];
      callback  = args[2];
    }
    
    // If id is passed, store a data reference either as .data on the first
    // element in a jQuery collection, or in the internal cache.
    if ( jquery_data_key ) { // Note: key is 'doTimeout' + id
      
      // Get id-object from the first element's data, otherwise initialize it to {}.
      elem = that.eq(0);
      elem.data( jquery_data_key, data = elem.data( jquery_data_key ) || {} );
      
    } else if ( id ) {
      // Get id-object from the cache, otherwise initialize it to {}.
      data = cache[ id ] || ( cache[ id ] = {} );
    }
    
    // Clear any existing timeout for this id.
    data.id && clearTimeout( data.id );
    delete data.id;
    
    // Clean up when necessary.
    function cleanup() {
      if ( jquery_data_key ) {
        elem.removeData( jquery_data_key );
      } else if ( id ) {
        delete cache[ id ];
      }
    };
    
    // Yes, there actually is a setTimeout call in here!
    function actually_setTimeout() {
      data.id = setTimeout( function(){ data.fn(); }, delay );
    };
    
    if ( callback ) {
      // A callback (and delay) were specified. Store the callback reference for
      // possible later use, and then setTimeout.
      data.fn = function( no_polling_loop ) {
        
        // If the callback value is a string, it is assumed to be the name of a
        // method on $ or $.fn depending on where doTimeout was executed.
        if ( typeof callback === 'string' ) {
          callback = method_base[ callback ];
        }
        
        callback.apply( that, aps.call( args, slice_args ) ) === true && !no_polling_loop
          
          // Since the callback returned true, and we're not specifically
          // canceling a polling loop, do it again!
          ? actually_setTimeout()
          
          // Otherwise, clean up and quit.
          : cleanup();
      };
      
      // Set that timeout!
      actually_setTimeout();
      
    } else if ( data.fn ) {
      // No callback passed. If force_mode (delay) is true, execute the data.fn
      // callback immediately, continuing any callback return-true polling loop.
      // If force_mode is false, execute the data.fn callback immediately but do
      // NOT continue a callback return-true polling loop. If force_mode is
      // undefined, simply clean up. Since data.fn was still defined, whatever
      // was supposed to happen hadn't yet, so return true.
      delay === undefined ? cleanup() : data.fn( delay === false );
      return true;
      
    } else {
      // Since no callback was passed, and data.fn isn't defined, it looks like
      // whatever was supposed to happen already did. Clean up and quit!
      cleanup();
    }
    
  };
  
})(jQuery);




//CSS3 Animate-it
$('.animatedParent').appear();
$('.animatedClick').click(function(){
  var target = $(this).attr('data-target');

  
  if($(this).attr('data-sequence') != undefined){
    var firstId = $("."+target+":first").attr('data-id');
    var lastId = $("."+target+":last").attr('data-id');
    var number = firstId;

    //Add or remove the class
    if($("."+target+"[data-id="+ number +"]").hasClass('go')){
      $("."+target+"[data-id="+ number +"]").addClass('goAway');
      $("."+target+"[data-id="+ number +"]").removeClass('go');
    }else{
      $("."+target+"[data-id="+ number +"]").addClass('go');
      $("."+target+"[data-id="+ number +"]").removeClass('goAway');
    }
    number ++;
    delay = Number($(this).attr('data-sequence'));
    $.doTimeout(delay, function(){
      console.log(lastId);
      
      //Add or remove the class
      if($("."+target+"[data-id="+ number +"]").hasClass('go')){
        $("."+target+"[data-id="+ number +"]").addClass('goAway');
        $("."+target+"[data-id="+ number +"]").removeClass('go');
      }else{
        $("."+target+"[data-id="+ number +"]").addClass('go');
        $("."+target+"[data-id="+ number +"]").removeClass('goAway');
      }

      //increment
      ++number;

      //continute looping till reached last ID
      if(number <= lastId){return true;}
    });
  }else{
    if($('.'+target).hasClass('go')){
      $('.'+target).addClass('goAway');
      $('.'+target).removeClass('go');
    }else{
      $('.'+target).addClass('go');
      $('.'+target).removeClass('goAway');
    }
  } 
});

$(document.body).on('appear', '.animatedParent', function(e, $affected){
  var ele = $(this).find('.animated');
  var parent = $(this);
  

  if(parent.attr('data-sequence') != undefined){
    
    var firstId = $(this).find('.animated:first').attr('data-id');
    var number = firstId;
    var lastId = $(this).find('.animated:last').attr('data-id');

    $(parent).find(".animated[data-id="+ number +"]").addClass('go');
    number ++;
    delay = Number(parent.attr('data-sequence'));

    $.doTimeout(delay, function(){
      $(parent).find(".animated[data-id="+ number +"]").addClass('go');
      ++number;
      if(number <= lastId){return true;}
    });
  }else{
    ele.addClass('go');
  }
  
});

 $(document.body).on('disappear', '.animatedParent', function(e, $affected) {
  if(!$(this).hasClass('animateOnce')){
    $(this).find('.animated').removeClass('go');
   }
 });

 $(window).load(function(){
  $.force_appear();
 });

$(function () {
//    Modular solution Banner script
    $('.mod-pg-banner-col').on('mouseenter', function () {
       $('.mod-pg-banner-col').removeClass('active').addClass('deactive');
       $(this).addClass('active').removeClass('deactive');
    });
    $('.mod-pg-banner-col').on('mouseleave', function () {
        $('.mod-pg-banner-col').removeClass('active deactive');
    });
    $('.st-mod-kitchen-sec .st-mod-explore-btn').on('click', function () {
        $('.mod-pg-banner-wrap,.st-thik-mod-wrap').hide();
        $('.st-mod-kw-tabs-ext-wrap').show();
        $('.st-mod-kw-tab-kitchen').click();
        $('.dydc-form-btn-sticky').addClass('dydc-btn-hidden');
    });
    $('.st-mod-wardrobe-sec .st-mod-explore-btn').on('click', function () {
        $('.mod-pg-banner-wrap,.st-thik-mod-wrap').hide();
        $('.st-mod-kw-tabs-ext-wrap').show();
        $('.st-mod-kw-tab-wardrobe').click();
        $('.dydc-form-btn-sticky').addClass('dydc-btn-hidden');
    });
//    Modular solution tabs script
    $('.st-mod-kw-tab-kitchen').on('click', function () {
        $('.st-mod-kw-tab-wardrobe').removeClass('active');
        $(this).addClass('active'); 
        $('.st-wardrobe-pg-wrap').hide();
        $('.st-kitchen-pg-wrap').show();      
        $('.dydc-form-btn-sticky').addClass('dydc-btn-hidden');
    });
    $('.st-mod-kw-tab-wardrobe').on('click', function () {
        $('.st-mod-kw-tab-kitchen').removeClass('active');
        $(this).addClass('active');
        $('.st-kitchen-pg-wrap').hide();
        $('.st-wardrobe-pg-wrap').show();
        $('.dydc-form-btn-sticky').addClass('dydc-btn-hidden');
    });
    /*-----Find Your Dream Kitchen section js [tab & filter]-----*/
                $(".mngmo-fydk-tab li a").on("click", function (e) {
                    e.preventDefault();
                    var offsetLeft = $(this).position().left,
                            width = $(this).innerWidth() / 2;
                    $(".mngmo-fydk-tab li a").removeClass("active");
                    $(this).addClass("active");
                    $(".fltr-triangle").css("left", offsetLeft + width - 5);
                });

                $(".mngmo-fydk-tab").on("click", "li", function (e) {
                    var dataList = $(this).attr("data-list");
                    $(".mngmo-fydk-fltr li").css("display", "none");
                    $(".mngmo-fydk-fltr li[data-list='" + dataList + "']").css("display", "inline-block");
                    if ($(this).hasClass("allstyle")) {
                        $(".mngmo-fydk-fltr> ul > li").css("display", "inline-block");
                    }
                });

                $(".mngmo-fydk-fltr ul li a").on("click", function (e) {
                    e.preventDefault();

                });


                /*-----Check Out the FAQs section js [Accordion]-----*/
                $(".accord-data").hide();
                $(".accord-data").first().show();
                $(".acco-ttl").first().addClass('active');
                $(".accordian_container").find(".acco-ttl").on("click", function () {
                    $(".acco-ttl").removeClass("active");
                    $(this).addClass("active");
                    $(this).next().slideDown("slow");
                    $(".accord-data").not($(this).next()).slideUp('fast');
                });

                /*--- form js ---*/
                $(document).scroll(function () {
                    var top = $('.mngmo-dydc-form').position().top;
                    var sectionHeight = $('.mngmo-dydc-form').innerHeight();
                    var formBottom = top + sectionHeight;
                    if ($(this).scrollTop() > formBottom) {
                        $('.st-kitchen-pg-wrap .dydc-form-btn-sticky').removeClass('dydc-btn-hidden');
                    } else {
                        $('.st-kitchen-pg-wrap .dydc-form-btn-sticky').addClass('dydc-btn-hidden');
                    }
                    
//                    for wardrobe
                    var wartop = $('.primo-book-con-wrap').position().top;
                    var warsectionHeight = $('.primo-book-con-wrap').innerHeight();                   
                    var formBottom = wartop + warsectionHeight;
                    if ($(this).scrollTop() > formBottom) {
                        $('.st-wardrobe-pg-wrap .dydc-form-btn-sticky').removeClass('dydc-btn-hidden');
                    } else {
                        $('.st-wardrobe-pg-wrap .dydc-form-btn-sticky').addClass('dydc-btn-hidden');
                    }
                });                
   
});

$(document).ready(function () {
    $('#city').select2();
});
/* 
 *@Developed By : Shreenivas 
 *@Desc : For wardrobe, the static block js shifted here
 */


 $(function ()
 {
        if ($(window).width() > 1024)
        {
            $('#home-slide-next,#home-slide-prev').hide();
            $('#primo-slide-next,#primo-slide-prev').hide();
            $('#home-slide-show,#home-slide-next,#home-slide-prev').hover(function () {
                $('#home-slide-next,#home-slide-prev').show();
            }, function () {
                $('#home-slide-next,#home-slide-prev').hide();
            });
            $('.sliderprimo,#primo-slide-next,#primo-slide-prev').hover(function () {
                $('#primo-slide-next,#primo-slide-prev').show();
            }, function () {
                $('#primo-slide-next,#primo-slide-prev').hide();
            });
            $('#home-slide-show').cycle({
                slides: '> .home-slide-block',
                fx: 'scrollHorz',
                timeout: 000,
                speed: 800,
                manualSpeed: 800,
                pause: 1,
                slideResize: true,
                pauseOnHover: true
            });

            $('.sliderprimo').cycle({
                slides: '> .primo-wardrobe-slider-wrap',
                fx: 'scrollHorz',
                timeout: 000,
                speed: 800,
                manualSpeed: 800,
                pause: 1,
                slideResize: true,
                pauseOnHover: true,
                continueAuto: false
            });
                setTimeout(function() {
            var obj_slider_id, string_html, final_html,first_div_child;
            obj_slider_id = $("#home-slide-show");
            first_div_child = $(obj_slider_id).find('div:first');
            string_html = first_div_child.html();
            first_div_child.html('');
            final_html = '';
            if(typeof string_html !== "undefined" && string_html != "") {
                final_html = string_html.replace("autoplay=1", "autoplay=0");
            }
            first_div_child.html('');
            first_div_child.append(final_html);
         }, 500);  

        }
        else
        {
            $('#home-slide-show').cycle({
                slides: '> .home-slide-block',
                fx: 'scrollHorz',
                timeout: 0,
                speed: 800,
                manualSpeed: 800,
                pause: 1,
                slideResize: true,
                swipe: true
            });

            $('.sliderprimo').cycle({
                slides: '> .primo-wardrobe-slider-wrap',
                fx: 'scrollHorz',
                timeout: 000,
                speed: 800,
                manualSpeed: 800,
                pause: 1,
                slideResize: true,
                swipe: true,
                continueAuto: false
            });
           
           
        }
       
        $('#home-slide-show').on('cycle-next cycle-prev', function () {
            var data = $(this).data('cycle.opts');
            data.continueAuto = false;
        });
        $('.sliderprimo').on('cycle-next cycle-prev', function () {
            var data = $(this).data('cycle.opts');
            data.continueAuto = false;
        });
        $(document).on('click', '#home-slide-next', function () {
            $('#home-slide-show').cycle('next');
        });
        $(document).on('click', '#home-slide-prev', function () {
            $('#home-slide-show').cycle('prev');
        });
        $(document).on('click', '#primo-slide-next', function () {
            $('.sliderprimo').cycle('next');
        });
        $(document).on('click', '#primo-slide-prev', function () {
            $('.sliderprimo').cycle('prev');
        });
    });
    $('.home-slide-block.cycle-sentinel').css('zIndex', 90);
    $('.primo-wardrobe-slider-wrap.cycle-sentinel').css('zIndex', 90);
    $(document).ready(function () {
    if(recaptcha == 'VISIBLE'){
    $.ajax
    ({
        url: root_url+'/site_page/show_hide_captch',
            data:{"from_page":"primorati_wardrobe"},
        type: "POST",
        success: function(data)
            {
               if(data!="" && data==1)
               {
            $("#captcha_container").css("display","block");
//            $("#frm_wardrobe_6_letters_code").removeAttr('disabled');
            $("#txt_container").addClass("input-half");
                        $("#captcha_status").val(1);
           }
           else
        {
            $("#captcha_container").css("display","none");
//            $("#frm_wardrobe_6_letters_code").attr('disabled',true);
            $("#txt_container").removeClass("input-half");
            $("#txt_container_parent").removeClass("primorati-modular-captcha");
                        $("#captcha_status").val(0);
        }
              

             },
            error: function(x,y,z)
        {
             
            }
         });
        }
        $(function () {
            $('.guide-animated img:gt(0)').hide();
            setInterval(function () {
                $('.guide-animated :first-child').fadeOut(700).next('img').fadeIn(700).end().appendTo('.guide-animated');
            }, 3000);
        });

        /*$(function () {
        
         global_function.sliderHorizontal('.sliderprimo', '.primo-wardrobe-slider-wrap', 1, '.primo-nxt', '.primo-prev', 1);
        
         });*/


    });
   
    function primoratiSubmit(form_id)
    {
        $("#tokenErrorWadrobe").hide();
        var primorati_name = $.trim($('#' + form_id + '_name').val());
        var primorati_email = $.trim($('#' + form_id + '_email').val());
        var primorati_phone = $.trim($('#' + form_id + '_phone').val());
        var primorati_comment = $.trim($('#' + form_id + '_comment').val());
        var show_captcha=  $("#captcha_container").css("display");
       
        var errors = 0;
        var scroll = 0;
        if (primorati_name == "Name" || primorati_name == "")
        {
            $('#' + form_id + ' #nameError').html('Required').css('display', 'block').parent().addClass('input-error');
            if (scroll === 0) {
                $('#' + form_id + '_name').focus();
                scroll = 1;
            }
            errors = 1;
        }
        else
        {
            var nameFilter = /^[a-zA-Z]*$/;
          
            if (nameFilter.test(primorati_name))
            {               
                $('#' + form_id + ' #nameError').css('display', 'none').parent().removeClass('input-error');
            }
            else
            {       
                errors = 1;
                $('#' + form_id + ' #nameError').css('display', 'block').html('Letters Only');
                if (scroll === 0) {
                    $('#' + form_id + '_name').focus();
                    scroll = 1;
                }               
            }
        }

        if (primorati_email == "")
        {
            $('#' + form_id + ' #emailError').html('Required').css('display', 'block').parent().addClass('input-error');
            if (scroll === 0) {
                $('#' + form_id + '_email').focus();
                scroll = 1;
            }
            errors = 1;
        }
        else
        {
            var filter = /^([a-zA-Z0-9_\.\-])+\@(([a-zA-Z0-9\-])+\.)+([a-zA-Z0-9]{2,4})+$/;
            if (filter.test(primorati_email))
            {
                $('#' + form_id + ' #emailError').css('display', 'none').parent().removeClass('input-error');
            }
            else
            {
                $('#' + form_id + ' #emailError').html('Incorrect email ID').css('display', 'block').parent().addClass('input-error');
                if (scroll === 0)
                {
                    $('#' + form_id + '_email').focus();
                    scroll = 1;
                }
                errors = 1;
                
            }
        }

        if (primorati_phone == "")
        {
            $("#" + form_id + " #phoneError").html('Required').css('display', 'block').parent().addClass('input-error');
            if (scroll === 0) {
                $('#' + form_id + '_phone').focus();
                scroll = 1;
            }
            errors = 1;
        }
        else if (primorati_phone.length > 11 || primorati_phone.length < 10)
        {
            $("#" + form_id + " #phoneError").html('Enter Only Mobile Or Phone Number').css('display', 'block').parent().addClass('input-error');
            if (scroll === 0) {
                $('#' + form_id + '_phone').focus();
                scroll = 1;
            }
            errors = 1;
        }
        else
        {
            var numberFilter = /^[0-9]+$/;

            if (numberFilter.test(primorati_phone) && !(primorati_phone.charAt(0) == 0)) {
                $("#" + form_id + " #phoneError").css('display', 'none').parent().removeClass('input-error');
            }
            else
            {
                $("#" + form_id + " #phoneError").html('Invalid phone number').css('display', 'block').parent().addClass('input-error');
                if (scroll === 0) {
                    $('#' + form_id + '_phone').focus();
                    scroll = 1;
                }
                errors = 1;                
            }
        }

        if (primorati_comment == "Comment" || primorati_comment == "")
        {
            $("#" + form_id + " #commentError").html('Required').css('display', 'block').parent().addClass('input-error');
            if (scroll === 0) {
                $('#' + form_id + '_comment').focus();
                scroll = 1;
            }
            errors = 1;
        }
        else if (primorati_comment.length >= 256)
        {
            $("#" + form_id + " #commentError").html('Only 256 Character Allowed!!').css('display', 'block').parent().addClass('input-error');
            if (scroll === 0) {
                $('#' + form_id + '_comment').focus();
                scroll = 1;
            }
            errors = 1;            
        }
        else
        {
            $("#" + form_id + " #commentError").css('display', 'none').parent().removeClass('input-error');
        }

        if(recaptcha == 'VISIBLE' && show_captcha=="block") {
            var v = grecaptcha.getResponse(widgetId_Primo);
            if(v=="")
            {
                if($("#captcha_error").length>0)
                {
                    $("#captcha_error").html("Please re-enter your reCAPTCHA.").addClass("error-text");
                }
                else
                {
                    $("#captcha_container").after("<span id='captcha_error' class='error-text'>Please re-enter your reCAPTCHA.</span>");
                }
                errors=1;
            }    
        }
        else{
            if(!errors) {
                grecaptcha.execute(widgetId_Primo);
                //errors=1;
                /*if($.trim(isRecaptcha) != 'success'){
                    errors=1;
                    grecaptcha.reset(widgetId_Primo);
                }*/
            }

        }           
        //alert(errors); return false;
        if(recaptcha == 'VISIBLE') {
            if (errors == 0)
            {
                primoratiSubmitForm(form_id) 
            } else {
                 grecaptcha.reset(widgetId_Primo);
                $('#primorati_submit').removeAttr("disabled");
                PF.HEADER.removeBlueButtonLoader(form_id);
                $(".btn").removeAttr("disabled");
                return false;
            }
        }

    }

    function primoratiSubmitForm(form_id) {
        var formData = $("#" + form_id).serialize();           
            var path = root_url + "/site_page/primoratiFormSubmit";
            $.ajax({
                url: path,
                type: "POST",
                processData: false,
                cache: false,
                data: formData,
                beforeSend: function () {
                    PF.HEADER.addBlueButtonLoader(form_id);
                    $("#primorati_submit").prop('disabled', true);
                },
                success: function (data) {
                    if (data == "success")
                    {
                        $('.cs_thankyou_block_for_priorati').show(400);
                        $('.primo-form .primo-para, .primo-form .primo-heading').hide();
                        $('#primorati_form').hide(400);
                        PF.HEADER.removeBlueButtonLoader(form_id);
                        $("#primorati_form").remove();
                    }
                    else
                    {
                        $("#primorati_submit").prop('disabled', false);
                        var json_obj;
                        try {
                            json_obj = $.parseJSON(data);
                        } catch (e) {
                            json_obj = data;
                        }
                        $.each(json_obj, function (index, value) {
                            if(index=="frm_wardrobe_6_letters_code")
                            {
                                if($("#captcha_error").length>0)
                                {
                                    $("#captcha_error").html("Please re-enter your reCAPTCHA.").addClass("error-text");
                                }
                                else
                                {
                                    $("#captcha_container").after("<span id='captcha_error' class='error-text'>Please re-enter your reCAPTCHA.</span>");
                                }
                            }
                            else if(index == 'token_expired'){
                                $("#tokenErrorWadrobe").html("An error has occurred. Please refresh the page and try again.");
                                $("#tokenErrorWadrobe").show();
                            }
                            else
                            {
                                $('#' + index + "Error").html(value).show();
                            }
                           
                        });
                        PF.HEADER.removeBlueButtonLoader(form_id);
                        return false;
                    }
                },
                complete:function(data){
                    
                    return false;
                }
            });
    }